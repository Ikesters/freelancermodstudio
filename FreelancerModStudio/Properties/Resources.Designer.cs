//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:2.0.50727.3082
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FreelancerModStudio.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FreelancerModStudio.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        internal static System.Drawing.Bitmap About {
            get {
                object obj = ResourceManager.GetObject("About", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Add {
            get {
                object obj = ResourceManager.GetObject("Add", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Close {
            get {
                object obj = ResourceManager.GetObject("Close", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap CloseMod {
            get {
                object obj = ResourceManager.GetObject("CloseMod", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Copy {
            get {
                object obj = ResourceManager.GetObject("Copy", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Cut {
            get {
                object obj = ResourceManager.GetObject("Cut", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 1.0.0.0 ähnelt.
        /// </summary>
        internal static string DefaultModVersion {
            get {
                return ResourceManager.GetString("DefaultModVersion", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap Delete {
            get {
                object obj = ResourceManager.GetObject("Delete", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap DeleteFolder {
            get {
                object obj = ResourceManager.GetObject("DeleteFolder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Document {
            get {
                object obj = ResourceManager.GetObject("Document", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Icon Error {
            get {
                object obj = ResourceManager.GetObject("Error", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap File {
            get {
                object obj = ResourceManager.GetObject("File", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Filedll {
            get {
                object obj = ResourceManager.GetObject("Filedll", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Fileini {
            get {
                object obj = ResourceManager.GetObject("Fileini", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Icon FileINIIcon {
            get {
                object obj = ResourceManager.GetObject("FileINIIcon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Filetxt {
            get {
                object obj = ResourceManager.GetObject("Filetxt", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Filewav {
            get {
                object obj = ResourceManager.GetObject("Filewav", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Filter {
            get {
                object obj = ResourceManager.GetObject("Filter", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Folder {
            get {
                object obj = ResourceManager.GetObject("Folder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap FullScreen {
            get {
                object obj = ResourceManager.GetObject("FullScreen", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap GoTo {
            get {
                object obj = ResourceManager.GetObject("GoTo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap HiddenFile {
            get {
                object obj = ResourceManager.GetObject("HiddenFile", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap HiddenFolder {
            get {
                object obj = ResourceManager.GetObject("HiddenFolder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap HiddenFolderOpen {
            get {
                object obj = ResourceManager.GetObject("HiddenFolderOpen", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap HomePage {
            get {
                object obj = ResourceManager.GetObject("HomePage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die FreelancerModStudio.Layout.xml ähnelt.
        /// </summary>
        internal static string LayoutPath {
            get {
                return ResourceManager.GetString("LayoutPath", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap LogoAbout {
            get {
                object obj = ResourceManager.GetObject("LogoAbout", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Icon LogoIcon {
            get {
                object obj = ResourceManager.GetObject("LogoIcon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Mod {
            get {
                object obj = ResourceManager.GetObject("Mod", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die .flmsm ähnelt.
        /// </summary>
        internal static string ModExtension {
            get {
                return ResourceManager.GetString("ModExtension", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap NewDocument {
            get {
                object obj = ResourceManager.GetObject("NewDocument", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap NewFolder {
            get {
                object obj = ResourceManager.GetObject("NewFolder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap NewMod {
            get {
                object obj = ResourceManager.GetObject("NewMod", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap NewWindow {
            get {
                object obj = ResourceManager.GetObject("NewWindow", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Icon Note {
            get {
                object obj = ResourceManager.GetObject("Note", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Open {
            get {
                object obj = ResourceManager.GetObject("Open", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap OpenFolder {
            get {
                object obj = ResourceManager.GetObject("OpenFolder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap OpenMod {
            get {
                object obj = ResourceManager.GetObject("OpenMod", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Paste {
            get {
                object obj = ResourceManager.GetObject("Paste", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Icon Properties {
            get {
                object obj = ResourceManager.GetObject("Properties", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ReDo {
            get {
                object obj = ResourceManager.GetObject("ReDo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ReportIssue {
            get {
                object obj = ResourceManager.GetObject("ReportIssue", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Save {
            get {
                object obj = ResourceManager.GetObject("Save", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap SaveAll {
            get {
                object obj = ResourceManager.GetObject("SaveAll", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Settings {
            get {
                object obj = ResourceManager.GetObject("Settings", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die FreelancerModStudio.xml ähnelt.
        /// </summary>
        internal static string SettingsPath {
            get {
                return ResourceManager.GetString("SettingsPath", resourceCulture);
            }
        }
        
        internal static System.Drawing.Icon SolutionExplorer {
            get {
                object obj = ResourceManager.GetObject("SolutionExplorer", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Template.xml ähnelt.
        /// </summary>
        internal static string TemplatePath {
            get {
                return ResourceManager.GetString("TemplatePath", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap UnDo {
            get {
                object obj = ResourceManager.GetObject("UnDo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update ähnelt.
        /// </summary>
        internal static string UpdateDownloadPath {
            get {
                return ResourceManager.GetString("UpdateDownloadPath", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap UpFolder {
            get {
                object obj = ResourceManager.GetObject("UpFolder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap WebSearch {
            get {
                object obj = ResourceManager.GetObject("WebSearch", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap WebSearch_Large {
            get {
                object obj = ResourceManager.GetObject("WebSearch_Large", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
